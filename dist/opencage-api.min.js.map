{"version":3,"file":"opencage-api.min.js","mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAkB,SAAID,IAEtBD,EAAe,SAAIC,GACpB,CATD,CASGK,MAAM,KACT,O,WCQAH,EAAOD,QAZY,CAACK,EAAMC,KACxB,MAAMC,EAAQ,IAAIC,MAAMF,GAClBG,EAAS,CACbJ,OACAC,WAKF,OAHAC,EAAMG,SAAW,CACfD,UAEKF,CAAK,C,gBCfd,MAAMI,EAAU,EAAQ,IAClBC,EAAmB,EAAQ,KAC3BC,EAAa,EAAQ,KAqE3BZ,EAAOD,QApBUc,GACf,IAAIC,SAAQ,CAACC,EAASC,KACpB,GAAIN,EAAQO,kBAAkBJ,GAG5B,YADAG,EADcJ,EAAW,IAhDF,yBAoDzB,MAAMM,EA5CS,CAACL,IAClB,MAAMM,EAAQ,IAAKN,GAEnB,IAAIO,EAbwB,+CAcxBC,GAAa,EAajB,OAZKX,EAAQY,mBAAmBT,EAAMU,WAKhCb,EAAQY,mBAAmBT,EAAMW,OACnCL,EAAMK,IAAMC,QAAQC,IAAIC,kBAAoBF,QAAQC,IAAIE,aAEtDlB,EAAQY,mBAAmBH,EAAMK,OACnCH,GAAa,KAPfD,EAAWP,EAAMU,gBACVJ,EAAMI,UASR,CACLF,aACAD,WACAD,QACD,EAuBgBU,CAAWhB,GAC1B,GAAIK,EAAOG,WAGT,YADAL,EADcJ,EAAW,IArDP,oBAyDpB,MAAM,MAAEO,EAAK,SAAEC,GAAaF,EACtBY,EAAKnB,EAAiBQ,GAG5BY,MAFY,GAAGX,KAAYU,KAEhBE,KAAKjB,GAASkB,MAAMjB,EAAO,G,SClC1ChB,EAAOD,QAAU,CACfmC,SA7BgBC,GAAuB,iBAARA,IAAqBC,OAAOC,MAAMF,GA8BjEG,QAtBeH,KAAUA,GAAOI,MAAMD,QAAQH,GAuB9Cb,mBAf0BkB,QACT,IAAVA,GAAmC,KAAVA,EAehCvB,kBAPyBuB,GACzB,MAAOA,E,eChCT,MAAMC,EAAU,EAAQ,KAExBzC,EAAOD,QAAU,CACf0C,U,gBCHF,MAAM/B,EAAU,EAAQ,IAaxBV,EAAOD,QAXmBc,GACpBH,EAAQO,kBAAkBJ,GACrB,GAEF6B,OAAOC,KAAK9B,GAChB+B,KACEpB,GAAQ,GAAGqB,mBAAmBrB,MAAQqB,mBAAmBhC,EAAMW,QAEjEsB,KAAK,I,GCTNC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAanD,QAGrB,IAAIC,EAAS+C,EAAyBE,GAAY,CAGjDlD,QAAS,CAAC,GAOX,OAHAqD,EAAoBH,GAAUjD,EAAQA,EAAOD,QAASiD,GAG/ChD,EAAOD,OACf,CCnB0BiD,CAAoB,I,MDF1CD,C","sources":["webpack://opencage/webpack/universalModuleDefinition","webpack://opencage/./src/error.js","webpack://opencage/./src/geocode.js","webpack://opencage/./src/helpers.js","webpack://opencage/./src/index.js","webpack://opencage/./src/qs.js","webpack://opencage/webpack/bootstrap","webpack://opencage/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"opencage\"] = factory();\n\telse\n\t\troot[\"opencage\"] = factory();\n})(self, () => {\nreturn ","/**\n * Returns an {Error} object with response and status\n *\n * @param {*} code\n * @param {*} message\n */\nconst buildError = (code, message) => {\n  const error = new Error(message);\n  const status = {\n    code,\n    message,\n  };\n  error.response = {\n    status,\n  };\n  return error;\n};\n\nmodule.exports = buildError;\n","const helpers = require('./helpers');\nconst buildQueryString = require('./qs');\nconst buildError = require('./error');\n\nconst OPENCAGEDATA_JSON_URL = 'https://api.opencagedata.com/geocode/v1/json';\n\nconst MISSING_OR_BAD_QUERY = 'missing or bad query';\nconst MISSING_API_KEY = 'missing API key';\n\n/**\n * Builds the query params including key and proxy URL\n *\n * @param {*} input\n */\nconst buildQuery = (input) => {\n  const query = { ...input };\n\n  let endpoint = OPENCAGEDATA_JSON_URL;\n  let missingKey = false;\n  if (!helpers.isUndefinedOrEmpty(input.proxyURL)) {\n    // endpoint will be the proxyURL\n    endpoint = input.proxyURL;\n    delete query.proxyURL;\n  } else {\n    if (helpers.isUndefinedOrEmpty(input.key)) {\n      query.key = process.env.OPENCAGE_API_KEY || process.env.OCD_API_KEY;\n    }\n    if (helpers.isUndefinedOrEmpty(query.key)) {\n      missingKey = true;\n    }\n  }\n  return {\n    missingKey,\n    endpoint,\n    query,\n  };\n};\n\n/**\n * geocode address and reverse geocode coordinates using\n * [OpenCage API](https://opencagedata.com/api) requesting the json format.\n *\n * @param  {Object} input the input query parameter as JSON object,\n *  the attribute `q` is required, the `key` can be omitted when using\n *  a `proxyURL`, and when using node with a dedicated environment variable\n *  (OPENCAGE_API_KEY).\n *  Others optional paameters can be found at Opencage Data API\n *  [documentation](https://opencagedata.com/api#forward-opt)\n *\n * @return {Promise}  a promise resolved by the json format API payload\n */\nconst geocode = (input) =>\n  new Promise((resolve, reject) => {\n    if (helpers.isUndefinedOrNull(input)) {\n      const error = buildError(400, MISSING_OR_BAD_QUERY);\n      reject(error);\n      return;\n    }\n    const params = buildQuery(input);\n    if (params.missingKey) {\n      const error = buildError(401, MISSING_API_KEY);\n      reject(error);\n      return;\n    }\n    const { query, endpoint } = params;\n    const qs = buildQueryString(query);\n    const url = `${endpoint}?${qs}`;\n    // console.log(url);\n    fetch(url).then(resolve).catch(reject);\n  });\n\nmodule.exports = geocode;\n","/**\n * @private\n * returns true is `val` is a number\n * @param  {Object}  val input parameter\n * @return {Boolean}     [description]\n */\nconst isNumber = (val) => typeof val === 'number' && !Number.isNaN(val);\n\n/**\n * @private\n * returns true is `val` is an array\n * @param  {Object}  val input parameter\n * @return {Boolean}     returns true if array\n */\nconst isArray = (val) => !!val && Array.isArray(val);\n\n/**\n * @private\n * returns true is `param` is not defined or empty\n * @param  {String}  param object property as a string\n * @return {Boolean}       returns value\n */\nconst isUndefinedOrEmpty = (param) =>\n  typeof param === 'undefined' || param === '';\n\n/**\n * @private\n * returns true is `param` is not defined or null\n * @param  {String}  param object property as a string\n * @return {Boolean}       returns value\n */\nconst isUndefinedOrNull = (param) =>\n  typeof param === 'undefined' || param === null;\n\nmodule.exports = {\n  isNumber,\n  isArray,\n  isUndefinedOrEmpty,\n  isUndefinedOrNull,\n};\n","const geocode = require('./geocode');\n\nmodule.exports = {\n  geocode,\n};\n","const helpers = require('./helpers');\n\nconst buildQueryString = (input) => {\n  if (helpers.isUndefinedOrNull(input)) {\n    return '';\n  }\n  return Object.keys(input)\n    .map(\n      (key) => `${encodeURIComponent(key)}=${encodeURIComponent(input[key])}`\n    )\n    .join('&');\n};\n\nmodule.exports = buildQueryString;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(44);\n"],"names":["root","factory","exports","module","define","amd","self","code","message","error","Error","status","response","helpers","buildQueryString","buildError","input","Promise","resolve","reject","isUndefinedOrNull","params","query","endpoint","missingKey","isUndefinedOrEmpty","proxyURL","key","process","env","OPENCAGE_API_KEY","OCD_API_KEY","buildQuery","qs","fetch","then","catch","isNumber","val","Number","isNaN","isArray","Array","param","geocode","Object","keys","map","encodeURIComponent","join","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__"],"sourceRoot":""}