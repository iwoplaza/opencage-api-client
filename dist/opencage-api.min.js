!function(e,o){"object"==typeof exports&&"object"==typeof module?module.exports=o():"function"==typeof define&&define.amd?define([],o):"object"==typeof exports?exports.opencage=o():e.opencage=o()}(self,(()=>{return e={150:e=>{e.exports=(e,o)=>{const n=new Error(o),r={code:e,message:o};return n.response={status:r},n}},984:(e,o,n)=>{const r=n(89),t=n(282),s=n(150);e.exports=e=>new Promise(((o,n)=>{if(r.isUndefinedOrNull(e))return void n(s(400,"missing or bad query"));const i=(e=>{const o={...e};let n="https://api.opencagedata.com/geocode/v1/json",t=!1;return r.isUndefinedOrEmpty(e.proxyURL)?(r.isUndefinedOrEmpty(e.key)&&(o.key=process.env.OPENCAGE_API_KEY||process.env.OCD_API_KEY),r.isUndefinedOrEmpty(o.key)&&(t=!0)):(n=e.proxyURL,delete o.proxyURL),{missingKey:t,endpoint:n,query:o}})(e);if(i.missingKey)return void n(s(401,"missing API key"));const{query:p,endpoint:d}=i,c=t(p);fetch(`${d}?${c}`).then(o).catch(n)}))},89:e=>{e.exports={isNumber:e=>"number"==typeof e&&!Number.isNaN(e),isArray:e=>!!e&&Array.isArray(e),isUndefinedOrEmpty:e=>void 0===e||""===e,isUndefinedOrNull:e=>null==e}},44:(e,o,n)=>{const r=n(984);e.exports={geocode:r}},282:(e,o,n)=>{const r=n(89);e.exports=e=>r.isUndefinedOrNull(e)?"":Object.keys(e).map((o=>`${encodeURIComponent(o)}=${encodeURIComponent(e[o])}`)).join("&")}},o={},function n(r){var t=o[r];if(void 0!==t)return t.exports;var s=o[r]={exports:{}};return e[r](s,s.exports,n),s.exports}(44);var e,o}));
//# sourceMappingURL=opencage-api.min.js.map