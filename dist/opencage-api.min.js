!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.opencage=t():e.opencage=t()}(self,(()=>{return e={150:e=>{e.exports=(e,t)=>{const s=new Error(t),o={code:e,message:t};return s.response={status:o},s}},404:e=>{e.exports=(e,t,s)=>fetch(e).then((e=>e.json())).then(t).catch(s),e.exports.fetchUrl=e=>fetch(e),e.exports.parseJSON=e=>e.json(),e.exports.checkStatus=e=>{if(e.status>=200&&e.status<300)return e;const t=new Error(e.statusText);throw t.status={code:e.status,message:e.statusText},t}},984:(e,t,s)=>{const o=s(89),r=s(282),n=s(404),i=s(150);e.exports=e=>new Promise(((t,s)=>{if(o.isUndefinedOrNull(e))return void s(i(400,"missing or bad query"));const p=(e=>{const t={...e};let s="https://api.opencagedata.com/geocode/v1/json",r=!1;return o.isUndefinedOrEmpty(e.proxyURL)?(o.isUndefinedOrEmpty(e.key)&&(t.key=process.env.OPENCAGE_API_KEY||process.env.OCD_API_KEY),o.isUndefinedOrEmpty(t.key)&&(r=!0)):(s=e.proxyURL,delete t.proxyURL),{missingKey:r,endpoint:s,query:t}})(e);if(p.missingKey)return void s(i(401,"missing API key"));const{query:d,endpoint:c}=p,u=r(d);n(`${c}?${u}`,t,s)}))},89:e=>{e.exports={isNumber:e=>"number"==typeof e&&!Number.isNaN(e),isArray:e=>!!e&&Array.isArray(e),isUndefinedOrEmpty:e=>void 0===e||""===e,isUndefinedOrNull:e=>null==e}},44:(e,t,s)=>{const o=s(984);e.exports={geocode:o}},282:(e,t,s)=>{const o=s(89);e.exports=e=>o.isUndefinedOrNull(e)?"":Object.keys(e).map((t=>`${encodeURIComponent(t)}=${encodeURIComponent(e[t])}`)).join("&")}},t={},function s(o){var r=t[o];if(void 0!==r)return r.exports;var n=t[o]={exports:{}};return e[o](n,n.exports,s),n.exports}(44);var e,t}));
//# sourceMappingURL=opencage-api.min.js.map